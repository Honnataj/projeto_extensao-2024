unit Unit_excel;

interface

uses
  Winapi.Windows, Winapi.Messages, System.SysUtils, System.Variants, System.Classes, Vcl.Graphics,
  Vcl.Controls, Vcl.Forms, Vcl.Dialogs, FireDAC.Stan.Intf, FireDAC.Stan.Option,
  FireDAC.Stan.Param, FireDAC.Stan.Error, FireDAC.DatS, FireDAC.Phys.Intf,
  FireDAC.DApt.Intf, FireDAC.Stan.Async, FireDAC.DApt, Data.DB,
  FireDAC.Comp.Client, Vcl.StdCtrls, Vcl.Grids, Vcl.DBGrids,
  FireDAC.Comp.DataSet;

type
  TForm2 = class(TForm)
    FDTable1: TFDTable;
    FDTable1codigo: TFDAutoIncField;
    FDTable1data_requerimento: TWideMemoField;
    FDTable1quantidade: TIntegerField;
    FDTable1requerente_responsavel_codigo: TIntegerField;
    FDTable1requerente_nao_responsavel: TWideMemoField;
    FDTable1item_codigo: TIntegerField;
    FDTable1local_retirada_codigo: TIntegerField;
    FDTable1setor_codigo: TIntegerField;
    DataSource1: TDataSource;
    DBGrid1: TDBGrid;
    Exportar: TButton;
    FDQuery1: TFDQuery;
    procedure ExportarClick(Sender: TObject);
  private
    { Private declarations }
  public
    { Public declarations }
  end;

var
  Form2: TForm2;

implementation
uses Unit1;
{$R *.dfm}

procedure TForm2.ExportarClick(Sender: TObject);
var
  Query: TFDQuery;
  CSVFile: TextFile;
  i: Integer;
  FileName, Line: string;
begin
  try

    // Nome do arquivo CSV
    FileName := 'C:\Users\jhonn\Documents\Embarcadero\Studio\exportacao.csv';

    // Abre o arquivo CSV para escrita
    AssignFile(CSVFile, FileName);
    Rewrite(CSVFile);

    try
      // Escreve os nomes das colunas (cabeçalho)
      Line := '';
      for i := 0 to Query.FieldCount - 1 do
      begin
        Line := Line + Query.Fields[i].FieldName;
        if i < Query.FieldCount - 1 then
          Line := Line + ';'; // Separador CSV
      end;
      Writeln(CSVFile, Line);

      // Escreve os dados da consulta
      Query.First;
      while not Query.Eof do
      begin
        Line := '';
        for i := 0 to Query.FieldCount - 1 do
        begin
          Line := Line + Query.Fields[i].AsString;
          if i < Query.FieldCount - 1 then
            Line := Line + ';'; // Separador CSV
        end;
        Writeln(CSVFile, Line);
        Query.Next;
      end;

      ShowMessage('Exportação concluída com sucesso para: ' + FileName);
    finally
      CloseFile(CSVFile);
    end;
  finally
    Query.Free;
  end;
end;
end.
